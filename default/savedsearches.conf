# Copyright (c) 2017, 2019, DCSO GmbH

[default]
[DCSO Domain IOC for ES Last 30d]
schedule_window = 15
display.visualizations.show = 0
request.ui_dispatch_view = search
dispatch.earliest_time = -30d@d
enableSched = 1
alert.track = 0
cron_schedule = 0 */1 * * *
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
request.ui_dispatch_app = SA-DCSO-TIE
action.email.useNSSubject = 1
search = | tstats latest(Root.value) as domain, latest(Root.updated_at) as updated_at from datamodel="DCSO_IOC.Root" where nodename=Root.Domain_Name by Root.id | where relative_time(strptime(updated_at,"%Y-%m-%d %T.%6Q%:z"),"+30d")>now() | eval description="DCSO Domain IOC"| eval weight=1 | table description, domain, weight | outputlookup DCSO-Domain-IOC

[DCSO IPv4 IOC for ES Last 1d]
schedule_window = 15
display.visualizations.show = 0
request.ui_dispatch_view = search
dispatch.earliest_time = -1d@d
enableSched = 1
alert.track = 0
cron_schedule = 0 */1 * * *
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
request.ui_dispatch_app = SA-DCSO-TIE
action.email.useNSSubject = 1
search = | tstats latest(Root.value) as ip, latest(Root.updated_at) as updated_at from datamodel="DCSO_IOC.Root" where nodename=Root.IPv4 by Root.id | where relative_time(strptime(updated_at,"%Y-%m-%d %T.%6Q%:z"),"+1d")>now() | rex field=ip "(?<ip>\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})" | eval description="DCSO IPv4 IOC"| eval weight=1 | table description, ip, weight | outputlookup DCSO-IPv4-IOC

[DCSO URL IOC for ES Last 180d]
schedule_window = 15
display.visualizations.show = 0
request.ui_dispatch_view = search
dispatch.earliest_time = -180d@d
enableSched = 1
alert.track = 0
cron_schedule = 0 */1 * * *
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
request.ui_dispatch_app = SA-DCSO-TIE
action.email.useNSSubject = 1
search = | tstats latest(Root.value) as url, latest(Root.created_at) as created_at from datamodel="DCSO_IOC.Root" where nodename=Root.URL by Root.id | eval description="DCSO URL IOC"| eval weight=1 | table description, http_referrer, http_user_agent, url, weight | outputlookup DCSO-URL-IOC

[DCSO Domain IOC for ES Last 180d - Extended]
schedule_window = 15
display.visualizations.show = 0
request.ui_dispatch_view = search
dispatch.earliest_time = -180d@d
enableSched = 1
alert.track = 0
cron_schedule = 0 */1 * * *
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
request.ui_dispatch_app = SA-DCSO-TIE
action.email.useNSSubject = 1
search = | tstats latest(Root.value) as domain, latest(Root.hotness) as hotness, latest(Root.min_severity) as min_severity, latest(Root.max_severity) as max_severity, latest(Root.min_confidence) as min_confidence, latest(Root.max_confidence) as max_confidence, latest(Root.ioc_attributes) as ioc_attributes, latest(Root.categories) as categories, latest(Root.actors) as actors, latest(Root.families) as families, latest(Root.event_attributes) as event_attributes, latest(Root.last_seen) as last_seen, latest(Root.created_at) as created_at from datamodel="DCSO_IOC.Root" where nodename=Root.Domain_Name by Root.id | fields domain,hotness,min_severity,max_severity,min_confidence,max_confidence,categories,actors,families,ioc_attributes,event_attributes,last_seen,created_at | outputlookup DCSO-Domain-IOC-ext

[DCSO IPv4 IOC for ES Last 180d - Extended]]
schedule_window = 15
display.visualizations.show = 0
request.ui_dispatch_view = search
dispatch.earliest_time = -180d@d
enableSched = 1
alert.track = 0
cron_schedule = 0 */1 * * *
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
request.ui_dispatch_app = SA-DCSO-TIE
action.email.useNSSubject = 1
search = | tstats latest(Root.value) as ip, latest(Root.hotness) as hotness, latest(Root.min_severity) as min_severity, latest(Root.max_severity) as max_severity, latest(Root.min_confidence) as min_confidence, latest(Root.max_confidence) as max_confidence, latest(Root.ioc_attributes) as ioc_attributes, latest(Root.categories) as categories, latest(Root.actors) as actors, latest(Root.families) as families, latest(Root.event_attributes) as event_attributes, latest(Root.last_seen) as last_seen, latest(Root.created_at) as created_at from datamodel="DCSO_IOC.Root" where nodename=Root.IPv4 by Root.id | rex field=ip "(?<ip>\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})" | fields ip,hotness,min_severity,max_severity,min_confidence,max_confidence,categories,actors,families,ioc_attributes,event_attributes,last_seen,created_at | outputlookup DCSO-IPv4-IOC-ext 

[DCSO URL IOC for ES Last 180d - Extended]]
schedule_window = 15
display.visualizations.show = 0
request.ui_dispatch_view = search
dispatch.earliest_time = -180d@d
enableSched = 1
alert.track = 0
cron_schedule = 0 */1 * * *
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
request.ui_dispatch_app = SA-DCSO-TIE
action.email.useNSSubject = 1
search = | tstats latest(Root.value) as url, latest(Root.hotness) as hotness, latest(Root.min_severity) as min_severity, latest(Root.max_severity) as max_severity, latest(Root.min_confidence) as min_confidence, latest(Root.max_confidence) as max_confidence, latest(Root.ioc_attributes) as ioc_attributes, latest(Root.categories) as categories, latest(Root.actors) as actors, latest(Root.families) as families, latest(Root.event_attributes) as event_attributes, latest(Root.last_seen) as last_seen, latest(Root.created_at) as created_at from datamodel="DCSO_IOC.Root" where nodename=Root.URL by Root.id | fields url,hotness,min_severity,max_severity,min_confidence,max_confidence,categories,actors,families,ioc_attributes,event_attributes,last_seen,created_at | outputlookup DCSO-URL-IOC-ext

[Domain IOC Pingback]
display.events.fields = ["categories{}"]
action.notable.param.verbose = 0
display.visualizations.charting.chart = line
action.risk.param.verbose = 0
alert.digest_mode = 0
request.ui_dispatch_view = search
quantity = 0
alert.suppress = 0
display.general.type = statistics
action.ping.param.verbose = 0
action.dcso_pingback = 1
request.ui_dispatch_app = SA-DCSO-TIE
action.threat_add.param.verbose = 0
action.nbtstat.param.verbose = 0
action.keyindicator.invert = 0
action.send2uba.param.verbose = 0
cron_schedule = 0 2 * * *
enableSched = 0
alert.track = 0
dispatch.earliest_time = -2d@d
relation = greater than
dispatch.latest_time = -1d@d
counttype = number of events
action.nslookup.param.verbose = 0
action.makestreams.param.verbose = 0
display.page.search.tab = statistics
search = | tstats count from datamodel=Web by Web.dest _time span=1s |rename Web.dest as dest | eval dest=replace (dest, ":[1-9]{2,}","") | eval dest=replace (dest, "\*.","") | stats sum(count) by dest,_time | lookup DCSO-Domain-IOC domain as dest | search weight=* |eval data_type="domainname" | eval seen=strftime(_time, "%Y-%m-%dT%H:%M:%SZ") | rename dest as value, sum(count) as occurrences | fields value seen occurrences data_type

[IP IOC Pingback]
display.events.fields = ["categories{}"]
action.notable.param.verbose = 0
display.visualizations.charting.chart = line
action.risk.param.verbose = 0
alert.digest_mode = 0
request.ui_dispatch_view = search
quantity = 0
alert.suppress = 0
display.general.type = statistics
action.ping.param.verbose = 0
action.dcso_pingback = 1
request.ui_dispatch_app = SA-DCSO-TIE
action.threat_add.param.verbose = 0
action.nbtstat.param.verbose = 0
action.keyindicator.invert = 0
action.send2uba.param.verbose = 0
cron_schedule = 0 2 * * *
enableSched = 0
alert.track = 0
dispatch.earliest_time = -2d@d
relation = greater than
dispatch.latest_time = -1d@d
counttype = number of events
action.nslookup.param.verbose = 0
action.makestreams.param.verbose = 0
display.page.search.tab = statistics
search = | tstats count from datamodel=Network_Traffic by All_Traffic.dest _time span=1s | rename All_Traffic.dest as dest | lookup DCSO-IPv4-IOC ip as dest | search weight=* | eval data_type="ipv4"| eval value=dest."/32" | eval seen=strftime(_time, "%Y-%m-%dT%H:%M:%SZ")| rename count as occurrences | fields value seen occurrences data_type

[URL IOC Pingback]
display.events.fields = ["categories{}","Web.url"]
action.notable.param.verbose = 0
display.visualizations.charting.chart = line
action.risk.param.verbose = 0
alert.digest_mode = 0
request.ui_dispatch_view = search
alert.suppress = 0
display.general.type = statistics
action.ping.param.verbose = 0
action.dcso_pingback = 1
request.ui_dispatch_app = SA-DCSO-TIE
action.threat_add.param.verbose = 0
action.nbtstat.param.verbose = 0
action.keyindicator.invert = 0
action.send2uba.param.verbose = 0
cron_schedule = 0 2 * * *
enableSched = 0
alert.track = 0
quantity = 0
dispatch.earliest_time = -2d@d
relation = greater than
dispatch.latest_time = -1d@d
counttype = number of events
action.nslookup.param.verbose = 0
action.makestreams.param.verbose = 0
search = | tstats count from datamodel=Web by Web.url  _time span=1s |rename Web.url as ModelUrl | lookup DCSO-URL-IOC url as ModelUrl | search weight=* | eval data_type="urlverbatim" | eval seen=strftime(_time, "%Y-%m-%dT%H:%M:%SZ") | rename ModelUrl as value, count as occurrences | fields value seen occurrences data_type

[No Domain IOC's]
display.visualizations.charting.chart = pie
request.ui_dispatch_view = search
dispatch.earliest_time = -1d
search = |inputlookup DCSO-Domain-IOC | stats count as "Domain IOC"
cron_schedule = 0 6 * * *
enableSched = 1
alert.track = 1
quantity = 1
relation = less than
dispatch.latest_time = now
counttype = number of events
display.page.search.tab = statistics
alert.suppress = 0
request.ui_dispatch_app = SA-DCSO-TIE
display.general.type = statistics

[No IP IOC's]
display.visualizations.charting.chart = pie
request.ui_dispatch_view = search
dispatch.earliest_time = -1d
search = |inputlookup DCSO-IPv4-IOC | stats count as "IP IOC's"
cron_schedule = 0 6 * * *
enableSched = 1
alert.track = 1
quantity = 1
relation = less than
dispatch.latest_time = now
counttype = number of events
display.page.search.tab = statistics
alert.suppress = 0
request.ui_dispatch_app = SA-DCSO-TIE
display.general.type = statistics

[No URL IOC]
display.visualizations.charting.chart = pie
request.ui_dispatch_view = search
dispatch.earliest_time = -1d
search = |inputlookup DCSO-URL-IOC | stats count as "IP IOC's"
cron_schedule = 0 6 * * *
enableSched = 1
alert.track = 1
quantity = 1
relation = less than
dispatch.latest_time = now
counttype = number of events
display.page.search.tab = statistics
alert.suppress = 0
request.ui_dispatch_app = SA-DCSO-TIE
display.general.type = statistics
